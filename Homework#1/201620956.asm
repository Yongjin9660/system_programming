MAIN	START	1000
	JSUB	STKINIT
	LDT	#1
	LDX	#0
RLOOP	LDA	#0
	TD	INPUT
	JEQ	RLOOP
	RD	INPUT
	COMP	ENTER
	JEQ	Cal
	STCH	LEN,X
	STA	NODE_NO
	TIX	MAXLEN
	J	RLOOP

Cal	LDX	#1
	LDCH	LEN,X
	COMP	#0
	JEQ	R_INIT	.Initialize Root
	LDX	#0
	LDCH	LEN,X
	COMP	#49
	JEQ	TEN
	LDX	#1
	LDCH	LEN,X
	ADD	#20
	STA	NODE_NO
	J	R_INIT

TEN	LDX	#1
	LDCH	LEN,X
	ADD	#10
	STA	NODE_NO
	J	R_INIT

R_INIT	LDX	#1
	LDA	#0
RLOOP2	TD	INPUT
	JEQ	RLOOP2
	RD	INPUT
	COMP	SPACE		.Ignore space
	JEQ	RLOOP2
	COMP	ENTER
	JEQ	LINECNT
	JSUB	F_PLUS
	J	F_INDEX		.Find Index

F_PLUS	LDS	#0
	LDT	#1
	LDS	FLAG		.Flag + 1
	ADDR	T,S
	STS	FLAG
	RSUB

F_INDEX	STA	TEMP
	LDA	FLAG
	COMP	#1
	JEQ	FIRST
	COMP	#2
	JEQ	SECOND
	COMP	#3
	JEQ	THIRD

FIRST	LDA	INDEX
	COMP	#1
	JEQ	ROOT
	JSUB	SEARCH
	LDA	TEMP
	STCH	BUF,X
	J	RLOOP2

ROOT	LDA	TEMP
	STCH	BUF,X
	J	RLOOP2

SEARCH	LDX	#2
LOOP	LDCH	BUF,X
	COMP	TEMP
	JEQ	FIND
	TIX	MAXLEN
	J	LOOP

FIND	STX	INDEX
	RSUB

SECOND	LDS	INDEX
	LDT	INDEX
	ADDR	T,S
	STS	INDEX
	LDX	INDEX
	LDA	TEMP
	COMP	#46
	JEQ	RLOOP2
	STCH	BUF,X
	J	RLOOP2

THIRD	STX	INDEX
	TIX	MAXLEN
	LDA	TEMP
	COMP	#46
	JEQ	RLOOP2
	STCH	BUF,X
	J	RLOOP2

LINECNT	LDS	LINE
	ADDR	T,S
	STS	LINE
	LDA	#0
	STA	FLAG
	LDA	LINE
	COMP	NODE_NO
	JEQ	WRITE1
	J	RLOOP2

LINE	WORD	48


BUF	RESB	2000
INDEX	WORD	1
FLAG	WORD	0
TEMP	WORD	0
LEN	RESB	2
NODE_NO	RESW	1
MAXLEN	WORD	2000

INPUT	BYTE	0
OUTPUT	BYTE	1

ENTER	WORD	10
SPACE	WORD	32
DOT	WORD	46


STKINIT	LDA	#STACK
	STA	TOP
	RSUB

PUSH	LDA	TOP
	ADD	#3
	STA	TOP
	RSUB

POP	LDA	TOP
	SUB	#3
	STA	TOP
	RSUB

STACK	RESW	30
TOP	RESW	1

WRITE1	LDX	#1
	STX	INDEX
	LDA	#48
	STA	LINE
Pre	LDX	#0
	LDA	#0
	LDS	#0
	LDT	#0
	LDX	INDEX
	LDCH	BUF,X
	JSUB	PRINT1
	JSUB	LEFT
	LDA	isLeft
	COMP	#1	.Left exists
	JEQ	MOVE_L
	JSUB	RIGHT
	LDA	isRight
	COMP	#1	.Right exists
	JEQ	MOVE_R
	J	MOVE_UP

WRITE2	TD	OUTPUT
	JEQ	WRITE2
	LDA	ENTER
	WD	OUTPUT
	LDX	#1
	STX	INDEX
	LDA	#48
	STA	LINE
In	LDX	#0
	LDA	#0
	LDS	#0
	LDT	#0
	LDX	INDEX
	JSUB	LEFT
	LDA	isLeft
	COMP	#1	.Left exists
	JEQ	MOVE_L2
	JSUB	PRINT2
	JSUB	RIGHT
	LDA	isRight
	COMP	#1	.Right exists
	JEQ	MOVE_R2
	J	MOVE_U2

WRITE3	TD	OUTPUT
	JEQ	WRITE3
	LDA	ENTER
	WD	OUTPUT
	LDX	#1
	STX	INDEX
	LDA	#48
	STA	LINE
Post	LDX	#0
	LDA	#0
	LDS	#0
	LDT	#0
	LDX	INDEX
	JSUB	LEFT
	LDA	isLeft
	COMP	#1	.Left exists
	JEQ	MOVE_L3
	JSUB	RIGHT
	LDA	isRight
	COMP	#1	.Right exists
	JEQ	MOVE_R3
	JSUB	PRINT3
	J	POST_U

POST_U	LDA	#0
	JSUB	POP
	LDX	@TOP
	STX	INDEX
	J	POST_R

POST_R	STX	tmpI
	LDS	tmpI
	LDT	tmpI
	ADDR	T,S
	STS	tmpI
	LDX	tmpI
	TIX	MAXLEN
	LDA	#0
	LDCH	BUF,X
	COMP	NULL
	JEQ	POST_P
	STX	tmpI
	LDX	INDEX
	STX	@TOP
	JSUB	PUSH
	LDX	tmpI
	STX	INDEX
	J	Post
	
POST_P	JSUB	PRINT3

	J	POST_U

MOVE_UP	JSUB	POP
	LDX	@TOP
	STX	tmpI
	LDS	tmpI
	LDT	tmpI
	ADDR	T,S
	STS	tmpI
	LDX	tmpI
	TIX	MAXLEN
	STX	INDEX
	J	Pre

MOVE_U2	JSUB	POP
	LDX	@TOP
	LDCH	BUF,X
	STX	INDEX
	JSUB	PRINT2
	STX	tmpI
	LDS	tmpI
	LDT	tmpI
	ADDR	T,S
	STS	tmpI
	LDX	tmpI
	TIX	MAXLEN
	STX	INDEX
	J	In

LEFT	LDS	INDEX		.LEFT CHeck
	LDT	INDEX
	ADDR	T,S
	STS	tmpI
	LDX	tmpI
	LDA	#0
	LDCH	BUF,X
	COMP	NULL
	JEQ	N_LEFT
	LDT	#1
	STT	isLeft
	RSUB

N_LEFT	LDT	#0
	STT	isLeft
	RSUB

MOVE_L	LDX	INDEX
	STX	@TOP
	JSUB	PUSH
	LDX	tmpI
	STX 	INDEX
	J	Pre

MOVE_L2	LDX	INDEX
	STX	@TOP
	JSUB	PUSH
	LDX	tmpI
	STX 	INDEX
	J	In

MOVE_L3	LDX	INDEX
	STX	@TOP
	JSUB	PUSH
	LDX	tmpI
	STX 	INDEX
	J	Post

RIGHT	LDX	tmpI
	TIX	MAXLEN
	STX	tmpI
	LDA	#0
	LDCH	BUF,X
	COMP	NULL
	JEQ	N_RIGHT
	LDT	#1
	STT	isRight
	RSUB

N_RIGHT	LDT	#0
	STT	isRight
	RSUB

MOVE_R	LDX	tmpI
	STX 	INDEX
	J	Pre

MOVE_R2	LDX	tmpI
	STX 	INDEX
	J	In

MOVE_R3	LDX	INDEX
	STX	@TOP
	JSUB	PUSH
	LDX	tmpI
	STX 	INDEX
	J	Post


PRINT1	TD	OUTPUT
	JEQ	PRINT1
	COMP	NULL
	JEQ	BACK
	WD	OUTPUT
	J	WRCNT1

BACK	RSUB

WRCNT1	LDS	#0
	LDS	LINE
	LDT	#1
	ADDR	T,S
	STS	LINE
	LDA	LINE
	COMP	NODE_NO
	JEQ	WRITE2
	RSUB

PRINT2	TD	OUTPUT
	JEQ	PRINT2
	LDX	INDEX
	LDCH	BUF,X
	COMP	NULL
	JEQ	BACK
	WD	OUTPUT
	J	WRCNT2

WRCNT2	LDS	#0
	LDS	LINE
	LDT	#1
	ADDR	T,S
	STS	LINE
	LDA	LINE
	COMP	NODE_NO
	JEQ	WRITE3
	RSUB

PRINT3	TD	OUTPUT
	JEQ	PRINT3
	LDX	INDEX
	LDCH	BUF,X
	WD	OUTPUT
	LDA	#0
	STCH	BUF,X
	J	WRCNT3

WRCNT3	LDS	#0
	LDS	LINE
	LDT	#1
	ADDR	T,S
	STS	LINE
	LDA	LINE
	COMP	NODE_NO
	JEQ	EXIT
	RSUB

NULL	WORD	0
tmpI	WORD	0
isLeft	WORD	0
isRight	WORD	0

EXIT	END	MAIN